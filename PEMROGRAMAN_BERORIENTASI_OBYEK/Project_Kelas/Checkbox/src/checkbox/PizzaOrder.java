/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package checkbox;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author arifs
 */
public class PizzaOrder extends javax.swing.JFrame {

    /**
     * Creates new form PizzaOrder
     */
    public PizzaOrder() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelSize = new javax.swing.JPanel();
        LableSize = new javax.swing.JLabel();
        RadioSizeSmall = new javax.swing.JRadioButton();
        RadioSizeMedium = new javax.swing.JRadioButton();
        RadioSizeLarge = new javax.swing.JRadioButton();
        PanelToppings = new javax.swing.JPanel();
        LableToppings = new javax.swing.JLabel();
        ToppingExtraCheese = new javax.swing.JCheckBox();
        ToppingMushrooms = new javax.swing.JCheckBox();
        ToppingOlives = new javax.swing.JCheckBox();
        ToppingTomatoes = new javax.swing.JCheckBox();
        ToppingGreenPeppers = new javax.swing.JCheckBox();
        ToppingsOnions = new javax.swing.JCheckBox();
        PanelCrush = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        RadioThinCrush = new javax.swing.JRadioButton();
        RadioThickCrush = new javax.swing.JRadioButton();
        RadioEatIn = new javax.swing.JRadioButton();
        RadioDineIn = new javax.swing.JRadioButton();
        ButtonBuildPizza = new javax.swing.JButton();
        ButtonExit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ViewOrderPizza = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PanelSize.setBackground(new java.awt.Color(204, 255, 204));
        PanelSize.setForeground(new java.awt.Color(204, 255, 204));

        LableSize.setText("Size");
        LableSize.setToolTipText("Size");

        RadioSizeSmall.setText("Small");
        RadioSizeSmall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioSizeSmallActionPerformed(evt);
            }
        });

        RadioSizeMedium.setText("Medium");
        RadioSizeMedium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioSizeMediumActionPerformed(evt);
            }
        });

        RadioSizeLarge.setText("Large");
        RadioSizeLarge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioSizeLargeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelSizeLayout = new javax.swing.GroupLayout(PanelSize);
        PanelSize.setLayout(PanelSizeLayout);
        PanelSizeLayout.setHorizontalGroup(
            PanelSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSizeLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(PanelSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LableSize)
                    .addComponent(RadioSizeSmall)
                    .addComponent(RadioSizeMedium)
                    .addComponent(RadioSizeLarge))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelSizeLayout.setVerticalGroup(
            PanelSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSizeLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(LableSize)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RadioSizeSmall)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RadioSizeMedium)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RadioSizeLarge)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        PanelToppings.setBackground(new java.awt.Color(204, 255, 204));

        LableToppings.setText("Toppings");

        ToppingExtraCheese.setText("Extra Cheese");

        ToppingMushrooms.setText("Mushrooms");
        ToppingMushrooms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ToppingMushroomsActionPerformed(evt);
            }
        });

        ToppingOlives.setText("Olives");

        ToppingTomatoes.setText("Tomatoes");

        ToppingGreenPeppers.setText("Green Peppers");

        ToppingsOnions.setText("Onions");

        javax.swing.GroupLayout PanelToppingsLayout = new javax.swing.GroupLayout(PanelToppings);
        PanelToppings.setLayout(PanelToppingsLayout);
        PanelToppingsLayout.setHorizontalGroup(
            PanelToppingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelToppingsLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(PanelToppingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LableToppings)
                    .addGroup(PanelToppingsLayout.createSequentialGroup()
                        .addGroup(PanelToppingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ToppingExtraCheese)
                            .addComponent(ToppingMushrooms)
                            .addComponent(ToppingOlives))
                        .addGap(37, 37, 37)
                        .addGroup(PanelToppingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ToppingTomatoes)
                            .addComponent(ToppingGreenPeppers)
                            .addComponent(ToppingsOnions))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        PanelToppingsLayout.setVerticalGroup(
            PanelToppingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelToppingsLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(LableToppings)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelToppingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelToppingsLayout.createSequentialGroup()
                        .addComponent(ToppingExtraCheese)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ToppingMushrooms)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ToppingOlives))
                    .addGroup(PanelToppingsLayout.createSequentialGroup()
                        .addComponent(ToppingsOnions)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ToppingGreenPeppers)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ToppingTomatoes)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PanelCrush.setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setText("Crush");

        RadioThinCrush.setText("Thin Crush");
        RadioThinCrush.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioThinCrushActionPerformed(evt);
            }
        });

        RadioThickCrush.setText("Thick Crush");
        RadioThickCrush.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioThickCrushActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelCrushLayout = new javax.swing.GroupLayout(PanelCrush);
        PanelCrush.setLayout(PanelCrushLayout);
        PanelCrushLayout.setHorizontalGroup(
            PanelCrushLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCrushLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(PanelCrushLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RadioThinCrush)
                    .addComponent(jLabel1)
                    .addComponent(RadioThickCrush))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        PanelCrushLayout.setVerticalGroup(
            PanelCrushLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCrushLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RadioThinCrush)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RadioThickCrush)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        RadioEatIn.setText("Eat In");
        RadioEatIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioEatInActionPerformed(evt);
            }
        });

        RadioDineIn.setText("Dine In");
        RadioDineIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioDineInActionPerformed(evt);
            }
        });

        ButtonBuildPizza.setText("Build Pizza");
        ButtonBuildPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonBuildPizzaActionPerformed(evt);
            }
        });

        ButtonExit.setText("Exit");
        ButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonExitActionPerformed(evt);
            }
        });

        ViewOrderPizza.setColumns(20);
        ViewOrderPizza.setRows(5);
        jScrollPane1.setViewportView(ViewOrderPizza);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(PanelCrush, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RadioEatIn)
                            .addComponent(ButtonBuildPizza))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RadioDineIn)
                            .addComponent(ButtonExit))
                        .addGap(44, 44, 44))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PanelToppings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PanelSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelToppings, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelCrush, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RadioEatIn)
                            .addComponent(RadioDineIn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ButtonBuildPizza)
                            .addComponent(ButtonExit))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RadioSizeMediumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioSizeMediumActionPerformed
        // TODO add your handling code here:
        if(RadioSizeMedium.isSelected()){
            RadioSizeLarge.setSelected(false);
            RadioSizeSmall.setSelected(false);
        }
    }//GEN-LAST:event_RadioSizeMediumActionPerformed

    private void ToppingMushroomsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ToppingMushroomsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ToppingMushroomsActionPerformed

    private void RadioEatInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioEatInActionPerformed
        // TODO add your handling code here:
        if(RadioEatIn.isSelected()){
            RadioDineIn.setSelected(false);
        }
    }//GEN-LAST:event_RadioEatInActionPerformed

    private void RadioDineInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioDineInActionPerformed
        // TODO add your handling code here:
        if(RadioDineIn.isSelected()){
            RadioEatIn.setSelected(false);
        }
    }//GEN-LAST:event_RadioDineInActionPerformed

    private void RadioSizeSmallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioSizeSmallActionPerformed
        // TODO add your handling code here:
        if(RadioSizeSmall.isSelected()){
            RadioSizeLarge.setSelected(false);
            RadioSizeMedium.setSelected(false);
        }
    }//GEN-LAST:event_RadioSizeSmallActionPerformed

    private void RadioSizeLargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioSizeLargeActionPerformed
        // TODO add your handling code here:
        if(RadioSizeLarge.isSelected()){
            RadioSizeSmall.setSelected(false);
            RadioSizeMedium.setSelected(false);
        }
    }//GEN-LAST:event_RadioSizeLargeActionPerformed

    private void RadioThinCrushActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioThinCrushActionPerformed
        // TODO add your handling code here:
        if(RadioThinCrush.isSelected()){
            RadioThickCrush.setSelected(false);
        }
    }//GEN-LAST:event_RadioThinCrushActionPerformed

    private void RadioThickCrushActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioThickCrushActionPerformed
        // TODO add your handling code here:
        if(RadioThickCrush.isSelected()){
            RadioThinCrush.setSelected(false);
        }
    }//GEN-LAST:event_RadioThickCrushActionPerformed

    private void ButtonBuildPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonBuildPizzaActionPerformed
        // TODO add your handling code here:
        String Result = "Pizza Order:\n";
        if(RadioSizeSmall.isSelected()){
            Result += RadioSizeSmall.getText()+"\n";
        }
        if(RadioSizeMedium.isSelected()){
            Result += RadioSizeMedium.getText()+"\n";
        }
        if(RadioSizeLarge.isSelected()){
            Result += RadioSizeLarge.getText()+"\n";
        }
        if(RadioSizeLarge.isSelected()== false ){
            if(RadioSizeMedium.isSelected() == false){
                if(RadioSizeSmall.isSelected() == false){
                    JOptionPane.showMessageDialog(PanelSize,"Please Choose Size", "Pizza Order", JOptionPane.WARNING_MESSAGE);
                }
            }
        }
        Result += "\n";
        
        //choose crush
        if(RadioThinCrush.isSelected()){
            Result += RadioThinCrush.getText()+"\n";
        }
        if(RadioThickCrush.isSelected()){
            Result += RadioThickCrush.getText()+"\n";
        }
        if(RadioThinCrush.isSelected() == false){
            if(RadioThickCrush.isSelected() == false){
                JOptionPane.showMessageDialog(PanelCrush, "Please Choose Crush", "Pizza Order", JOptionPane.WARNING_MESSAGE);
            }
        }
        Result += "\n";
        
        //toppings
        if(ToppingExtraCheese.isSelected()){
            Result += ToppingExtraCheese.getText()+"\n";
        }
        if(ToppingMushrooms.isSelected()){
            Result += ToppingMushrooms.getText()+"\n";
        }
        if(ToppingOlives.isSelected()){
            Result += ToppingOlives.getText()+"\n";
        }
        if(ToppingsOnions.isSelected()){
            Result += ToppingsOnions.getText()+"\n";
        }
        if(ToppingGreenPeppers.isSelected()){
            Result += ToppingGreenPeppers.getText()+"\n";
        }
        if(ToppingTomatoes.isSelected()){
            Result += ToppingTomatoes.getText()+"\n";
        }

        Result += "\n";

        //eat or dine
        if(RadioEatIn.isSelected()){
            Result += RadioEatIn.getText()+"\n";
        }
        if(RadioDineIn.isSelected()){
            Result += RadioDineIn.getText()+"\n";
        }
        if(RadioEatIn.isSelected() == false){
            if(RadioDineIn.isSelected() == false){
                JOptionPane.showMessageDialog(PanelToppings, "Please Choose Eat Or Dine In", "Pizza Order", JOptionPane.WARNING_MESSAGE);
            }
        }
        
        ViewOrderPizza.setText(Result);
    }//GEN-LAST:event_ButtonBuildPizzaActionPerformed

    private void ButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonExitActionPerformed
        // TODO add your handling code here:
        super.dispose();
    }//GEN-LAST:event_ButtonExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PizzaOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PizzaOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PizzaOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PizzaOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PizzaOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonBuildPizza;
    private javax.swing.JButton ButtonExit;
    private javax.swing.JLabel LableSize;
    private javax.swing.JLabel LableToppings;
    private javax.swing.JPanel PanelCrush;
    private javax.swing.JPanel PanelSize;
    private javax.swing.JPanel PanelToppings;
    private javax.swing.JRadioButton RadioDineIn;
    private javax.swing.JRadioButton RadioEatIn;
    private javax.swing.JRadioButton RadioSizeLarge;
    private javax.swing.JRadioButton RadioSizeMedium;
    private javax.swing.JRadioButton RadioSizeSmall;
    private javax.swing.JRadioButton RadioThickCrush;
    private javax.swing.JRadioButton RadioThinCrush;
    private javax.swing.JCheckBox ToppingExtraCheese;
    private javax.swing.JCheckBox ToppingGreenPeppers;
    private javax.swing.JCheckBox ToppingMushrooms;
    private javax.swing.JCheckBox ToppingOlives;
    private javax.swing.JCheckBox ToppingTomatoes;
    private javax.swing.JCheckBox ToppingsOnions;
    private javax.swing.JTextArea ViewOrderPizza;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
